{"version":3,"sources":["Detail.js"],"names":["박스","styled","div","제목","h4","props","색상","TabContent","useEffect","스위치변경","누른탭","Info","재고","connect","state","console","log","reducer","alert열렸니","reducer2","useState","alert","alert변경","useContext","재고context","스위치","axios","get","타이머","setTimeout","clearTimeout","id","useParams","history","useHistory","찾은상품","shoes","find","상품","className","style","color","src","width","title","content","price","onClick","재고변경","dispatch","type","데이터","name","quan","push","goBack","variant","defaultActiveKey","Item","Link","eventKey","in","classNames","timeout"],"mappings":"ybAWA,IAAIA,EAAKC,IAAOC,IAAV,KAGFC,EAAKF,IAAOG,GAAV,KAEK,SAACC,GAAD,OAAWA,EAAMC,gBAqG5B,SAASC,EAAWF,GAIlB,OAHAG,qBAAU,WACRH,EAAMI,gCAAM,MAEI,IAAdJ,EAAMK,mBACD,8EACgB,IAAdL,EAAMK,mBACR,8EACgB,IAAdL,EAAMK,mBACR,mFADF,EAKT,SAASC,EAAKN,GACZ,OAAO,8CAAOA,EAAMO,aAAG,MAWVC,uBARf,SAAsBC,GAEpB,OADAC,QAAQC,IAAIF,GACL,CACLA,MAAOA,EAAMG,QACbC,0BAAUJ,EAAMK,YAILN,EA3Hf,SAAgBR,GAAQ,IAAD,EACEe,oBAAS,GADX,mBAChBC,EADgB,KACTC,EADS,OAGFF,mBAAS,GAHP,mBAGhBV,EAHgB,aAIZa,qBAAWC,KACDJ,oBAAS,IALP,mBAKhBK,EALgB,KAKXhB,EALW,KAMrBD,qBAAU,WACRkB,IAAMC,MACN,IAAIC,EAAMC,YAAW,WACnBP,GAAQ,KACP,KAEH,OADAP,QAAQC,IAAI,gBACL,WACLc,aAAaF,MAEd,CAACP,IAfiB,IAiBfU,EAAOC,cAAPD,GACFE,EAAUC,cACVC,EAAO9B,EAAM+B,MAAMC,MAAK,SAAUC,GACpC,OAAOA,EAAGP,IAAMA,KAElB,OACE,sBAAKQ,UAAU,YAAf,UACE,cAACvC,EAAD,UACE,cAACG,EAAD,CAAIoC,UAAU,MAAd,uBAGS,IAAVlB,EACC,qBAAKkB,UAAU,WAAf,SACE,mBAAGC,MAAO,CAAEC,MAAO,OAAnB,0FAEA,KACJ,sBAAKF,UAAU,MAAf,UACE,qBAAKA,UAAU,WAAf,SACE,qBACEG,IAAI,gDACJC,MAAM,WAGV,sBAAKJ,UAAU,gBAAf,UACE,oBAAIA,UAAU,OAAd,SAAsBJ,EAAKS,QAC3B,4BAAIT,EAAKU,UACT,mBAAGL,MAAO,CAAEC,MAAO,OAAnB,SAA6BN,EAAKW,QAClC,cAACnC,EAAD,CAAMC,eAAIP,EAAMO,eAChB,wBACE2B,UAAU,iBACVQ,QAAS,WACP1C,EAAM2C,yBAAK,CAAC,EAAG,GAAI,KACnB3C,EAAM4C,SAAS,CACbC,KAAM,2BACNC,qBAAK,CAAEpB,GAAII,EAAKJ,GAAIqB,KAAMjB,EAAKS,MAAOS,KAAM,KAE9CpB,EAAQqB,KAAK,UARjB,sCAcA,wBACEf,UAAU,eACVQ,QAAS,WACPd,EAAQsB,UAHZ,4CAUJ,eAAC,IAAD,CAAKhB,UAAU,OAAOiB,QAAQ,OAAOC,iBAAiB,SAAtD,UACE,cAAC,IAAIC,KAAL,UACE,cAAC,IAAIC,KAAL,CACEC,SAAS,SACTb,QAAS,WACPtC,GAAM,IAHV,wCASF,cAAC,IAAIiD,KAAL,UACE,cAAC,IAAIC,KAAL,CACEC,SAAS,SACTb,QAAS,WACPtC,GAAM,IAHV,2CAUJ,cAAC,IAAD,CAAeoD,GAAIpC,EAAKqC,WAAW,MAAMC,QAAS,IAAlD,SACE,cAACxD,EAAD,CAAYG,qBAAKA,EAAKD,iCAAOA","file":"static/js/4.09299794.chunk.js","sourcesContent":["/* eslint-disable */\r\nimport React, { useEffect, useState, useContext } from 'react';\r\nimport { useHistory, useParams } from 'react-router-dom';\r\nimport styled from 'styled-components';\r\nimport './Detail.scss';\r\nimport axios from 'axios';\r\nimport { 재고context } from './App.js';\r\nimport { Nav } from 'react-bootstrap';\r\nimport { CSSTransition } from 'react-transition-group';\r\nimport { connect } from 'react-redux';\r\n\r\nlet 박스 = styled.div`\r\n  padding: 20px;\r\n`;\r\nlet 제목 = styled.h4`\r\n  font-size: 25px;\r\n  color: ${(props) => props.색상};\r\n`;\r\n\r\nfunction Detail(props) {\r\n  let [alert, alert변경] = useState(true);\r\n\r\n  let [누른탭, 누른탭변경] = useState(0);\r\n  let 재고 = useContext(재고context);\r\n  let [스위치, 스위치변경] = useState(false);\r\n  useEffect(() => {\r\n    axios.get();\r\n    let 타이머 = setTimeout(() => {\r\n      alert변경(false);\r\n    }, 2000);\r\n    console.log('안녕');\r\n    return () => {\r\n      clearTimeout(타이머);\r\n    };\r\n  }, [alert]);\r\n\r\n  let { id } = useParams();\r\n  let history = useHistory();\r\n  let 찾은상품 = props.shoes.find(function (상품) {\r\n    return 상품.id == id;\r\n  });\r\n  return (\r\n    <div className=\"container\">\r\n      <박스>\r\n        <제목 className=\"red\">Detail</제목>\r\n      </박스>\r\n\r\n      {alert === true ? (\r\n        <div className=\"my-alert\">\r\n          <p style={{ color: 'red' }}>재고가 얼마남지 않았습니다</p>\r\n        </div>\r\n      ) : null}\r\n      <div className=\"row\">\r\n        <div className=\"col-md-6\">\r\n          <img\r\n            src=\"http://codingapple1.github.io/shop/shoes1.jpg\"\r\n            width=\"100%\"\r\n          />\r\n        </div>\r\n        <div className=\"col-md-6 mt-4\">\r\n          <h4 className=\"pt-5\">{찾은상품.title}</h4>\r\n          <p>{찾은상품.content}</p>\r\n          <p style={{ color: 'red' }}>{찾은상품.price}</p>\r\n          <Info 재고={props.재고}></Info>\r\n          <button\r\n            className=\"btn btn-danger\"\r\n            onClick={() => {\r\n              props.재고변경([9, 10, 11]);\r\n              props.dispatch({\r\n                type: '항목추가',\r\n                데이터: { id: 찾은상품.id, name: 찾은상품.title, quan: 1 },\r\n              });\r\n              history.push('/cart');\r\n            }}\r\n          >\r\n            주문하기\r\n          </button>\r\n\r\n          <button\r\n            className=\"btn btn-info\"\r\n            onClick={() => {\r\n              history.goBack();\r\n            }}\r\n          >\r\n            뒤로가기\r\n          </button>\r\n        </div>\r\n      </div>\r\n      <Nav className=\"mt-5\" variant=\"tabs\" defaultActiveKey=\"link-0\">\r\n        <Nav.Item>\r\n          <Nav.Link\r\n            eventKey=\"link-0\"\r\n            onClick={() => {\r\n              스위치변경(false);\r\n            }}\r\n          >\r\n            상품설명\r\n          </Nav.Link>\r\n        </Nav.Item>\r\n        <Nav.Item>\r\n          <Nav.Link\r\n            eventKey=\"link-1\"\r\n            onClick={() => {\r\n              스위치변경(false);\r\n            }}\r\n          >\r\n            배송정보\r\n          </Nav.Link>\r\n        </Nav.Item>\r\n      </Nav>\r\n      <CSSTransition in={스위치} classNames=\"wow\" timeout={500}>\r\n        <TabContent 누른탭={누른탭} 스위치변경={스위치변경} />\r\n      </CSSTransition>\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction TabContent(props) {\r\n  useEffect(() => {\r\n    props.스위치변경(true);\r\n  });\r\n  if (props.누른탭 === 0) {\r\n    return <div>0번째내용입니다</div>;\r\n  } else if (props.누른탭 === 1) {\r\n    return <div>1번째내용입니다</div>;\r\n  } else if (props.누른탭 === 2) {\r\n    return <div>2번째내용입니다</div>;\r\n  }\r\n}\r\n\r\nfunction Info(props) {\r\n  return <p>재고:{props.재고[0]}</p>;\r\n}\r\n\r\nfunction state를props화(state) {\r\n  console.log(state);\r\n  return {\r\n    state: state.reducer,\r\n    alert열렸니: state.reducer2,\r\n  };\r\n}\r\n\r\nexport default connect(state를props화)(Detail);\r\n"],"sourceRoot":""}