{"version":3,"sources":["data.js","Cart.js","App.js","serviceWorkerRegistration.js","reportWebVitals.js","index.js"],"names":["id","title","content","price","Parent","props","Child1","이름","Child2","나이","useEffect","console","log","style","color","memo","connect","state","reducer","alert열렸니","reducer2","Table","striped","bordered","hover","variant","map","a","i","name","quan","onClick","dispatch","type","데이터","className","Detail","lazy","재고context","React","createContext","Card","재고","useContext","history","useHistory","push","shoes","src","width","App","useState","Data","shoes변경","재고변경","Navbar","bg","expand","Brand","href","Toggle","aria-controls","Collapse","Nav","Link","as","to","NavDropdown","Item","Divider","exact","path","Jumbotron","Button","Provider","value","axios","post","pw","get","then","result","data","catch","fallback","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","error","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","초기값","store","createStore","combineReducers","액션","found","findIndex","copy","ReactDOM","render","StrictMode","document","getElementById","URL","process","origin","addEventListener","fetch","headers","response","contentType","status","indexOf","ready","unregister","reload","checkValidServiceWorker","serviceWorkerRegistration"],"mappings":"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","file":"static/js/main.3f155a44.chunk.js","sourcesContent":["/* eslint-disable import/no-anonymous-default-export */\r\nexport default [\r\n  {\r\n    id: 0,\r\n    title: 'White and Black',\r\n    content: 'Born in France',\r\n    price: 120000,\r\n  },\r\n  {\r\n    id: 1,\r\n    title: 'Red Knit',\r\n    content: 'Born in Seoul',\r\n    price: 110000,\r\n  },\r\n  {\r\n    id: 2,\r\n    title: 'Grey Yordan',\r\n    content: 'Born in States',\r\n    price: 130000,\r\n  },\r\n];\r\n","import React, { useEffect, memo } from 'react';\r\nimport { Table } from 'react-bootstrap';\r\nimport { connect } from 'react-redux';\r\n\r\nfunction Cart(props) {\r\n  return (\r\n    <div>\r\n      <Table striped bordered hover variant=\"pink\">\r\n        <thead>\r\n          <tr>\r\n            <th>#</th>\r\n            <th>상품명</th>\r\n            <th>수량</th>\r\n            <th>변경</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {props.state.map((a, i) => {\r\n            return (\r\n              <tr key={i}>\r\n                <td>{a.id}</td>\r\n                <td>{a.name}</td>\r\n                <td>{a.quan}</td>\r\n                <td>\r\n                  <button\r\n                    onClick={() => {\r\n                      props.dispatch({ type: '수량증가', 데이터: a.id });\r\n                    }}\r\n                    className=\"btn btn-secondary\"\r\n                  >\r\n                    +\r\n                  </button>\r\n                  <button\r\n                    onClick={() => {\r\n                      props.dispatch({ type: '수량감소', 데이터: a.id });\r\n                    }}\r\n                    className=\"btn btn-secondary\"\r\n                  >\r\n                    -\r\n                  </button>\r\n                </td>\r\n              </tr>\r\n            );\r\n          })}\r\n        </tbody>\r\n      </Table>\r\n      {props.alert열렸니 === true ? (\r\n        <div className=\"my-alert2\">\r\n          <p style={{ color: 'red' }}>지금 구매하시면 신규할인 20%</p>\r\n          <button\r\n            onClick={() => {\r\n              props.dispatch({ type: 'alert닫기' });\r\n            }}\r\n            className=\"btn btn-warning\"\r\n          >\r\n            닫기\r\n          </button>\r\n        </div>\r\n      ) : null}\r\n      <Parent 이름=\"은경1\" 나이=\"26\"></Parent>\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction state를props화(state) {\r\n  console.log(state);\r\n  return {\r\n    state: state.reducer,\r\n    alert열렸니: state.reducer2,\r\n  };\r\n}\r\n\r\nfunction Parent(props) {\r\n  return (\r\n    <div>\r\n      <Child1 이름={props.이름}> </Child1>\r\n      <Child2 나이={props.나이}></Child2>\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction Child1(props) {\r\n  useEffect(() => {\r\n    console.log('렌더링됨1');\r\n  });\r\n  return <div style={{ color: 'brown' }}>LEGPROJECT</div>;\r\n}\r\n\r\nlet Child2 = memo(function () {\r\n  useEffect(() => {\r\n    console.log('렌더링됨2');\r\n  });\r\n  return <div style={{ color: 'pink' }}>from LeeEunGyeong</div>;\r\n});\r\n\r\nexport default connect(state를props화)(Cart);\r\n//export default Cart;\r\n","/* eslint-disable */\nimport React, { useState, useContext, lazy, Suspense } from 'react';\nimport { Navbar, NavDropdown, Nav, Button, Jumbotron } from 'react-bootstrap';\nimport './App.css';\nimport Data from './data.js';\nimport { Link, Route, Switch, useHistory } from 'react-router-dom';\n//import Detail from './Detail.js';\nlet Detail = lazy(() => {\n  return import('./Detail.js');\n});\nimport axios from 'axios';\nimport Cart from './Cart.js';\n\nexport let 재고context = React.createContext();\nfunction App() {\n  let [shoes, shoes변경] = useState(Data);\n  let [재고, 재고변경] = useState([10, 11, 12]);\n  return (\n    <div className=\"App\">\n      <Navbar bg=\"light\" expand=\"lg\">\n        <Navbar.Brand href=\"#home\">은굥SHOP</Navbar.Brand>\n        <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n        <Navbar.Collapse id=\"basic-navbar-nav\">\n          <Nav className=\"ml-auto\">\n            <Nav.Link as={Link} to=\"/\">\n              Home\n            </Nav.Link>\n            <Nav.Link as={Link} to=\"/detail\">\n              Detail\n            </Nav.Link>\n            <NavDropdown title=\"Dropdown\" id=\"basic-nav-dropdown\">\n              <NavDropdown.Item href=\"#action/3.1\">Action</NavDropdown.Item>\n              <NavDropdown.Item href=\"#action/3.2\">\n                Another action\n              </NavDropdown.Item>\n              <NavDropdown.Item href=\"#action/3.3\">Something</NavDropdown.Item>\n              <NavDropdown.Divider />\n              <NavDropdown.Item href=\"#action/3.4\">\n                Separated link\n              </NavDropdown.Item>\n            </NavDropdown>\n          </Nav>\n        </Navbar.Collapse>\n      </Navbar>\n      <Switch>\n        <Route exact path=\"/\">\n          <Jumbotron className=\"background\">\n            <h1>50% Season OFF!</h1>\n            <p style={{ color: 'pink' }}>LEG Project</p>\n            <p>\n              <Button variant=\"primary\">Learn more</Button>\n            </p>\n          </Jumbotron>\n          <div className=\"container\">\n            <재고context.Provider value={재고}>\n              <div className=\"row\">\n                {shoes.map((a, i) => {\n                  return <Card shoes={shoes[i]} i={i} key={i} />;\n                })}\n              </div>\n            </재고context.Provider>\n            <button\n              className=\"btn btn-secondary\"\n              onClick={() => {\n                axios.post('서버URL', { id: 'coddingapple', pw: 1234 });\n                axios\n                  .get('https://codingapple1.github.io/shop/data2.json')\n                  .then((result) => {\n                    console.log(result.data);\n                    shoes변경([...shoes, ...result.data]);\n                  })\n                  .catch(() => {\n                    console.log('실패');\n                  });\n              }}\n            >\n              더보기\n            </button>\n          </div>\n        </Route>\n        <Route path=\"/detail/:id\">\n          <재고context.Provider value={재고}>\n            <Suspense fallback={<div>로딩중이에요~~~^_^</div>}>\n              <Detail shoes={shoes} 재고={재고} 재고변경={재고변경} />\n            </Suspense>\n          </재고context.Provider>\n        </Route>\n        <Route path=\"/cart\">\n          <Cart></Cart>\n        </Route>\n\n        <Route path=\"/:id\">\n          <div>아무거나적었을때이거보여주삼</div>\n        </Route>\n      </Switch>\n    </div>\n  );\n}\n\nfunction Card(props) {\n  let 재고 = useContext(재고context);\n  let history = useHistory();\n  return (\n    <div\n      className=\"col-md-4\"\n      onClick={() => {\n        history.push('/detail/' + props.shoes.id);\n      }}\n    >\n      <img\n        src={\n          'https://codingapple1.github.io/shop/shoes' + (props.i + 1) + '.jpg'\n        }\n        width=\"100%\"\n      />\n      <h4>{props.shoes.title}</h4>\n      <p>{props.shoes.content}</p>\n      <h6 style={{ color: 'red' }}>${props.shoes.price}</h6>\n      재고:{재고[props.i]}\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\nimport reportWebVitals from './reportWebVitals';\nimport { BrowserRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport { combineReducers, createStore } from 'redux';\n\nlet alert초기값 = true;\n\nfunction reducer2(state = alert초기값, 액션) {\n  if (액션.type === 'alert닫기') {\n    state = false;\n    return state;\n  } else {\n    return state;\n  }\n}\n\nlet 초기값 = [\n  { id: 0, name: 'White and Black', quan: 1 },\n  { id: 1, name: 'Red Knit', quan: 2 },\n];\n\nfunction reducer(state = 초기값, 액션) {\n  if (액션.type === '항목추가') {\n    let found = state.findIndex((a) => {\n      return a.id === 액션.데이터.id;\n    });\n    if (found >= 0) {\n      let copy = [...state];\n      copy[found].quan++;\n      return copy;\n    } else {\n      let copy = [...state];\n      copy.push(액션.데이터);\n      return copy;\n    }\n  } else if (액션.type === '수량증가') {\n    let copy = [...state];\n    copy[액션.데이터].quan++;\n    return copy;\n  } else if (액션.type === '수량감소') {\n    let copy = [...state];\n    copy[액션.데이터].quan--;\n    return copy;\n  } else {\n    return state;\n  }\n}\nlet store = createStore(combineReducers({ reducer, reducer2 }));\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <Provider store={store}>\n        <App />\n      </Provider>\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://cra.link/PWA\nserviceWorkerRegistration.register();\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}